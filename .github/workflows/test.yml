# Run unit tests
name: Test

on: [push, pull_request]

env:
  FAF_DB_VERSION: v106

jobs:
  # Static Analysis
  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: pip install isort

      - run: isort . --check --diff

  # Tests
  unit-test:
    runs-on: ubuntu-latest
    services:
      faf-db:
        image: mysql:5.7
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          MYSQL_ROOT_PASSWORD: banana
          MYSQL_DATABASE: faf
          MYSQL_USER: faf-python-server
          MYSQL_PASSWORD: banana

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Run flyway db migrations
        env:
          FLYWAY_URL: jdbc:mysql://localhost/faf?useSSL=false
          FLYWAY_USER: root
          FLYWAY_PASSWORD: banana
          FLYWAY_LOCATIONS: filesystem:db/migrations
        run: |
          git clone --depth 1 --branch ${FAF_DB_VERSION} https://github.com/FAForever/db
          wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/6.5.3/flyway-commandline-6.5.3-linux-x64.tar.gz | tar xz
          flyway-6.5.3/flyway migrate

      - name: Install dependencies with pipenv
        run: |
          pip install pipenv
          pipenv sync --dev

      - run: pipenv run tests --cov-report=xml

      - name: Report coverage
        uses: codecov/codecov-action@v1
        with:
          files: coverage.xml
          fail_ci_if_error: true

  docker-build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Build docker image
          run: docker build --build-arg GITHUB_REF -t test_image .

        - name: Test image
          run: |
            docker run --rm -d -p 8001:8001 test_image
            nc -z localhost 8001
